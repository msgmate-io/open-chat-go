name: Open-Chat Go Build Matrix
on: 
  workflow_dispatch:
    inputs:
      product_version:
        description: 'Product version to build'
        required: false
        default: '1.0.63'
        type: string
jobs:
  example:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - { runner: macos-latest,  os: darwin,  arch: amd64, tags: netcgo        }
          - { runner: ubuntu-latest, os: linux,   arch: amd64, env:  CGO_ENABLED=0 }
          - { runner: ubuntu-latest, os: windows, arch: amd64, env:  CGO_ENABLED=0 }
    steps:
      - uses: actions/checkout@main
      - name: Clean build artifacts
        run: |
          rm -rf ./backend/dist
          rm -rf ./backend/out
      - name: Build
        uses: hashicorp/actions-go-build@main
        with:
          product_name: open-chat-go
          product_version: ${{ inputs.product_version }}
          go_version: 1.22
          os: ${{ matrix.os }}
          arch: ${{ matrix.arch }}
          work_dir: ./backend
          clean: false
          instructions: |-
            ${{ matrix.env }} \
              go build \
                -o "$BIN_PATH" \
                -trimpath \
                -buildvcs=false \
                -tags="${{ matrix.tags }}" \
                -ldflags "
                  -X 'main.Version=$PRODUCT_VERSION'
                  -X 'main.Revision=$PRODUCT_REVISION'
                  -X 'main.RevisionTime=$PRODUCT_REVISION_TIME'
                "
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: open-chat-go-${{ matrix.os }}-${{ matrix.arch }}
          path: ./backend/dist/*

  create-release:
    needs: example
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ github.event.inputs.product_version }}
          name: Open Chat Go v${{ github.event.inputs.product_version }}
          body: |
            ## Open Chat Go Release v${{ github.event.inputs.product_version }}
            
            **Version:** ${{ github.event.inputs.product_version }}
            **Commit:** ${{ github.sha }}
            
            ### Binaries
            - Darwin/macOS (amd64)
            - Linux (amd64)
            - Windows (amd64)
          draft: false
          prerelease: false
          generate_release_notes: true
          files: artifacts/**/*